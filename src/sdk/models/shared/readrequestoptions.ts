/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Collation } from "./collation";
import { Expose, Type } from "class-transformer";

/**
 * Options that can be used to modify the results, for example "limit" to control the number of documents returned by the server.
 */
export class ReadRequestOptions extends SpeakeasyBase {
  /**
   * A collation allows you to specify string comparison rules. Default is case-sensitive, to override it you can set this option to 'ci' that will apply to all the text fields in the filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collation" })
  @Type(() => Collation)
  collation?: Collation;

  /**
   * Limit the number of documents returned by the read operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * A cursor for use in pagination. The next streams will return documents after this offset.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: string;

  /**
   * Number of documents to skip before starting to return resulting documents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skip" })
  skip?: number;
}
