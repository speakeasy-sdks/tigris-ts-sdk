/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CollectionOptions } from "./collectionoptions";
import { Expose, Type } from "class-transformer";

export class DescribeCollectionRequest extends SpeakeasyBase {
    /**
     * Optionally specify a database branch name to perform operation on
     */
    @SpeakeasyMetadata()
    @Expose({ name: "branch" })
    branch?: string;

    /**
     * Name of the collection.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "collection" })
    collection?: string;

    /**
     * Collection requests modifying options.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "options" })
    @Type(() => CollectionOptions)
    options?: CollectionOptions;

    /**
     * Project name whose db is under target to get description of its collection.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "project" })
    project?: string;

    /**
     * Return schema in the requested format. Format can be JSON, Go, TypeScript, Java. Default is JSON.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "schema_format" })
    schemaFormat?: string;
}
