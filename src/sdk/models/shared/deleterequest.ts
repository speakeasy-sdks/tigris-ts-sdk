/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DeleteRequestOptions } from "./deleterequestoptions";
import { Expose, Type } from "class-transformer";

/**
 * Delete documents which matching specified filter. A filter can simply be key, value where key is the field name and value would be the value for this field. Or a filter can be logical where two or more fields can be logically joined using $or and $and. A few examples of filter: <li> To delete a user document where the id has a value 1: ```{"id": 1 }``` <li> To delete all the user documents where the key "id" has a value 1 or 2 or 3: `{"$or": [{"id": 1}, {"id": 2}, {"id": 3}]}`
 */
export class Filter extends SpeakeasyBase {}

export class DeleteRequest extends SpeakeasyBase {
    /**
     * Optionally specify a database branch name to perform operation on
     */
    @SpeakeasyMetadata()
    @Expose({ name: "branch" })
    branch?: string;

    /**
     * Delete documents which matching specified filter. A filter can simply be key, value where key is the field name and value would be the value for this field. Or a filter can be logical where two or more fields can be logically joined using $or and $and. A few examples of filter: <li> To delete a user document where the id has a value 1: ```{"id": 1 }``` <li> To delete all the user documents where the key "id" has a value 1 or 2 or 3: `{"$or": [{"id": 1}, {"id": 2}, {"id": 3}]}`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "filter" })
    @Type(() => Filter)
    filter?: Filter;

    /**
     * Additional options for deleted requests.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "options" })
    @Type(() => DeleteRequestOptions)
    options?: DeleteRequestOptions;
}
